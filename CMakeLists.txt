cmake_minimum_required(VERSION 3.5)
message(STATUS "Found CMake ${CMAKE_VERSION}")
project(pong3D LANGUAGES C)


add_executable(pong3D main.c pong3d.c geometry.c renderer.c sound.c synth.c msys.c screens.c tasks.c text.c)

target_compile_options(pong3D PRIVATE -std=c99)

find_package(OpenGL REQUIRED)
target_link_libraries(pong3D ${OPENGL_LIBRARIES})

if (MINGW)
   target_link_libraries(pong3D -mwindows)
endif()

if (WIN32)
	target_compile_options(pong3D PRIVATE -D_WINDOWS)
endif()

find_package(SDL2 QUIET)
if(SDL2_FOUND AND SDL2_INCLUDE_DIRS)
    include_directories(${SDL2_INCLUDE_DIRS})
    target_link_libraries(pong3D ${SDL2_LIBRARIES})
else()
    message(STATUS "SDL2 package was not found. Trying with pkg-config...")
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(SDL2_PKG sdl2)
    if (SDL2_PKG_FOUND)
		target_compile_options(pong3D PRIVATE ${SDL2_PKG_CFLAGS})
		target_link_libraries(pong3D ${SDL2_PKG_LIBRARIES})
    else()
		message(STATUS "SDL2 not found.")
    endif()    
endif()

find_package(GLEW QUIET)
if(GLEW_FOUND AND GLEW_INCLUDE_DIRS)
	include_directories(${GLEW_INCLUDE_DIRS})
    	target_link_libraries(pong3D ${GLEW_LIBRARIES})
else()
    message(STATUS "GLEW package was not found. Trying with pkg-config...")
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(GLEW_PKG glew)
    if (GLEW_PKG_FOUND)
		target_compile_options(pong3D PRIVATE ${GLEW_PKG_CFLAGS})
		target_link_libraries(pong3D ${GLEW_PKG_LIBRARIES})
    else()
		message(STATUS "GLEW not found.")
    endif()    
endif()

find_package(Freetype QUIET)
if(FREETYPE_FOUND)
	include_directories(${FREETYPE_INCLUDE_DIRS})
	target_link_libraries(pong3D ${FREETYPE_LIBRARIES})
else()
    message(STATUS "freetype package was not found. Trying with pkg-config...")
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(FREETYPE_PKG freetype2)
    if (FREETYPE_PKG_FOUND)
	    target_compile_options(pong3D PRIVATE ${FREETYPE_PKG_CFLAGS})
	    target_link_libraries(pong3D ${FREETYPE_PKG_LIBRARIES})
    else()
	    message(STATUS "Freetype not found.")
    endif()    
endif()

target_link_libraries(pong3D m)

file(COPY fonts DESTINATION .)
